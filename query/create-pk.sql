DECLARE
  v_sql VARCHAR2(4000);
BEGIN
  -- Drop existing primary key constraints
  FOR r IN (
    SELECT constraint_name, table_name 
    FROM user_constraints 
    WHERE constraint_type = 'P'
    AND constraint_name LIKE '%_PK'
  ) LOOP
    v_sql := 'ALTER TABLE "' || r.table_name || '" DROP CONSTRAINT "' || r.constraint_name || '"';
    BEGIN
      EXECUTE IMMEDIATE v_sql;
    EXCEPTION WHEN OTHERS THEN
      NULL; -- Ignore errors during drop
    END;
  END LOOP;
  
 -- Add primary key constraints for each table
  BEGIN
    v_sql := 'ALTER TABLE "ASSETACCOUNTS" ADD CONSTRAINT "ASSETACCOUNTS_PK" PRIMARY KEY ("COA")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating ASSETACCOUNTS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating ASSETACCOUNTS_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "ASSETCLASSES" ADD CONSTRAINT "ASSETCLASSES_PK" PRIMARY KEY ("GROUPCLASSES_ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating ASSETCLASSES_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating ASSETCLASSES_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "ASSETS" ADD CONSTRAINT "ASSETS_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating ASSETS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating ASSETS_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "ASSET_SAP_FAILED" ADD CONSTRAINT "ASSET_SAP_FAILED_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating ASSET_SAP_FAILED_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating ASSET_SAP_FAILED_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "BRANCHES" ADD CONSTRAINT "BRANCHES_PK" PRIMARY KEY ("ID_CABANG")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating BRANCHES_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating BRANCHES_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "COSTCENTERS" ADD CONSTRAINT "COSTCENTERS_PK" PRIMARY KEY ("KODE_PUSAT_BIAYA")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating COSTCENTERS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating COSTCENTERS_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "DEPRECIATIONS" ADD CONSTRAINT "DEPRECIATIONS_PK" PRIMARY KEY ("KODE_PENYUSUTAN")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating DEPRECIATIONS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating DEPRECIATIONS_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "DEPRECIATION_VALUES" ADD CONSTRAINT "DEPRECIATION_VALUES_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating DEPRECIATION_VALUES_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating DEPRECIATION_VALUES_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "DETAILASSETS" ADD CONSTRAINT "DETAILASSETS_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating DETAILASSETS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating DETAILASSETS_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "DIMENSI_SATUAN" ADD CONSTRAINT "DIMENSI_SATUAN_PK" PRIMARY KEY ("NAME")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating DIMENSI_SATUAN_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating DIMENSI_SATUAN_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "ELIMINATION" ADD CONSTRAINT "ELIMINATION_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating ELIMINATION_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating ELIMINATION_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "GROUPASSETS" ADD CONSTRAINT "GROUPASSETS_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating GROUPASSETS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating GROUPASSETS_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "GROUPCLASSES" ADD CONSTRAINT "GROUPCLASSES_ID_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating GROUPCLASSES_ID_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating GROUPCLASSES_ID_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "INSURANCES" ADD CONSTRAINT "INSURANCES_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating INSURANCES_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating INSURANCES_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "MASTER_ASURANSI" ADD CONSTRAINT "MASTER_ASURANSI_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating MASTER_ASURANSI_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating MASTER_ASURANSI_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "MONITORING_FAILED" ADD CONSTRAINT "MONITORING_FAILED_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating MONITORING_FAILED_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating MONITORING_FAILED_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "MONITORING_INTEGRATOR" ADD CONSTRAINT "MONITORING_INTEGRATOR_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating MONITORING_INTEGRATOR_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating MONITORING_INTEGRATOR_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "NOTIFIKASI" ADD CONSTRAINT "NOTIFIKASI_PK" PRIMARY KEY ("ID_NOTIFIKASI")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating NOTIFIKASI_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating NOTIFIKASI_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "PBB" ADD CONSTRAINT "PBB_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating PBB_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating PBB_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "PERIOD" ADD CONSTRAINT "PERIOD_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating PERIOD_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating PERIOD_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "PERIOD_REQUEST" ADD CONSTRAINT "PERIOD_REQUEST_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating PERIOD_REQUEST_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating PERIOD_REQUEST_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "PICTUREASSETS" ADD CONSTRAINT "PICTUREASSETS_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating PICTUREASSETS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating PICTUREASSETS_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "REFERENCES" ADD CONSTRAINT "REFERENCES_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating REFERENCES_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating REFERENCES_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "ROLES" ADD CONSTRAINT "ROLES_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating ROLES_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating ROLES_PK ❌: ' || SQLERRM);
  END;

  BEGIN
    v_sql := 'ALTER TABLE "USERS" ADD CONSTRAINT "USERS_PK" PRIMARY KEY ("ID")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating USERS_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating USERS_PK ❌: ' || SQLERRM);
  END;  

  BEGIN
    v_sql := 'ALTER TABLE "USES" ADD CONSTRAINT "USES_PK" PRIMARY KEY ("NO_ASET")';
    EXECUTE IMMEDIATE v_sql;
    DBMS_OUTPUT.PUT_LINE('Successfully creating USES_PK ✅');
  EXCEPTION WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error creating USES_PK ❌: ' || SQLERRM);
  END;  
END;